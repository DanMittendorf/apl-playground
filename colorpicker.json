{
  "type": "APL",
  "version": "1.4",
  "settings": {},
  "theme": "dark",
  "import": [],
  "resources": [
    {
      "numbers": {
        "paletteWidth": "${Math.round(viewport.width)}",
        "paletteHeight": "${Math.round(viewport.height)}"
      }
    }
  ],
  "styles": {},
  "onMount": [],
  "graphics": {
    "ColorPicker": {
      "parameters": [
        "x",
        "y",
        "r",
        "g",
        "b",
        {
          "name": "rangePerColor",
          "default": "${1 / 7}"
        }
      ],
      "type": "AVG",
      "version": "1.1",
      "width": "${@paletteWidth}",
      "height": "${@paletteHeight * .9}",
      "resources": [
        {
          "gradients": {
            "horizontalGradient": {
              "inputRange": [
                0,
                1
              ],
              "colorRange": [
                "rgb(255, 255, 255)",
                "rgb(255, 0, 0)"
              ],
              "type": "linear",
              "x1": 0,
              "y1": 0,
              "x2": 1,
              "y2": 0
            },
            "verticalGradient": {
              "inputRange": [
                0,
                1
              ],
              "colorRange": [
                "transparent",
                "rgb(0, 0, 0)"
              ],
              "type": "linear",
              "x1": 0,
              "y1": 0,
              "x2": 0,
              "y2": 1
            }
          }
        }
      ],
      "items": [
        {
          "type": "path",
          "fill": "@horizontalGradient",
          "pathData": "M0,0 L${@paletteWidth},0 L${@paletteWidth},${@paletteHeight * .9} L0,${@paletteHeight * .9} Z"
        },
        {
          "type": "path",
          "fill": "@verticalGradient",
          "pathData": "M0,0 L${@paletteWidth},0 L${@paletteWidth},${@paletteHeight * .9} L0,${@paletteHeight * .9} Z"
        },
        {
          "type": "group",
          "translateX": "${x}",
          "translateY": "${y}",
          "items": [
            {
              "type": "path",
              "fill": "rgb(${r}, ${g}, ${b})",
              "stroke": "#ffffff",
              "strokeWidth": 4,
              "pathData": "M-30,0a30,30 0 1,0 60,0a30,30 0 1,0 -60,0"
            }
          ]
        }
      ]
    },
    "ColorSlider": {
      "parameters": [
        "x",
        "y",
        "r",
        "g",
        "b"
      ],
      "type": "AVG",
      "version": "1.1",
      "width": "${@paletteWidth}",
      "height": "${@paletteHeight * .1}",
      "resources": [
        {
          "gradients": {
            "rainbow": {
              "inputRange": [
                0,
                0.16666666666666666,
                0.3333333333333333,
                0.5,
                0.6666666666666666,
                0.8333333333333333,
                1
              ],
              "colorRange": [
                "rgb(255, 0, 0)",
                "rgb(255, 255, 0)",
                "rgb(0, 255, 0)",
                "rgb(0, 255, 255)",
                "rgb(0, 0, 255)",
                "rgb(255, 0, 255)",
                "rgb(255, 0, 0)"
              ],
              "type": "linear",
              "x1": 0,
              "y1": 0,
              "x2": 1,
              "y2": 0
            }
          }
        }
      ],
      "items": [
        {
          "type": "path",
          "fill": "@rainbow",
          "pathData": "M0,0 L${@paletteWidth},0 L${@paletteWidth},${@paletteHeight * .1} L0,${@paletteHeight * .1} Z"
        }
      ]
    }
  },
  "commands": {
    "Noop": {
      "commands": []
    },
    "UpdateR": {
      "parameters": [
        "i",
        "v",
        "t",
        "p",
        "q"
      ],
      "commands": [
        {
          "type": "Select",
          "commands": [
            {
              "when": "${i == 0 || i == 5}",
              "type": "UpdateProperty",
              "property": "r",
              "value": "${v}"
            },
            {
              "when": "${i == 1}",
              "type": "UpdateProperty",
              "property": "r",
              "value": "${q}"
            },
            {
              "when": "${i == 2 || i == 3}",
              "type": "UpdateProperty",
              "property": "r",
              "value": "${p}"
            },
            {
              "when": "${i == 4}",
              "type": "UpdateProperty",
              "property": "r",
              "value": "${t}"
            }
          ],
          "otherwise": [
            {
              "type": "UpdateProperty",
              "property": "r",
              "value": 0
            }
          ]
        }
      ]
    },
    "UpdateG": {
      "parameters": [
        "i",
        "v",
        "t",
        "p",
        "q"
      ],
      "commands": [
        {
          "type": "Select",
          "commands": [
            {
              "when": "${i == 0}",
              "type": "UpdateProperty",
              "property": "g",
              "value": "${t}"
            },
            {
              "when": "${i == 1 || i == 2}",
              "type": "UpdateProperty",
              "property": "g",
              "value": "${v}"
            },
            {
              "when": "${i == 3}",
              "type": "UpdateProperty",
              "property": "g",
              "value": "${q}"
            },
            {
              "when": "${i == 4 || i == 5}",
              "type": "UpdateProperty",
              "property": "g",
              "value": "${p}"
            }
          ],
          "otherwise": [
            {
              "type": "UpdateProperty",
              "property": "g",
              "value": 0
            }
          ]
        }
      ]
    },
    "UpdateB": {
      "parameters": [
        "i",
        "v",
        "t",
        "p",
        "q"
      ],
      "commands": [
        {
          "type": "Select",
          "commands": [
            {
              "when": "${i == 0 || i == 1}",
              "type": "UpdateProperty",
              "property": "b",
              "value": "${p}"
            },
            {
              "when": "${i == 2}",
              "type": "UpdateProperty",
              "property": "b",
              "value": "${t}"
            },
            {
              "when": "${i == 3 || i == 4}",
              "type": "UpdateProperty",
              "property": "b",
              "value": "${v}"
            },
            {
              "when": "${i == 5}",
              "type": "UpdateProperty",
              "property": "b",
              "value": "${q}"
            }
          ],
          "otherwise": [
            {
              "type": "UpdateProperty",
              "property": "b",
              "value": 0
            }
          ]
        }
      ]
    },
    "UpdateProperty": {
      "parameters": [
        "property",
        "value"
      ],
      "commands": [
        {
          "type": "SetValue",
          "componentId": "outter",
          "property": "${property}",
          "value": "${Math.round(value * 255)}"
        }
      ]
    },
    "HSV2RGB": {
      "parameters": [
        "h",
        "s",
        "v",
        {
          "name": "i",
          "default": "${Math.floor(Math.abs(h) * 6)}"
        },
        {
          "name": "f",
          "default": "${Math.abs(h) * 6 - i}"
        },
        {
          "name": "p",
          "default": "${v * (1 - s)}"
        },
        {
          "name": "q",
          "default": "${v * (1 - f * s)}"
        },
        {
          "name": "t",
          "default": "${v * (1 - (1 - f) * s)}"
        }
      ],
      "commands": [
        {
          "type": "UpdateR",
          "i": "${i}",
          "v": "${v}",
          "t": "${t}",
          "p": "${p}",
          "q": "${q}"
        },
        {
          "type": "UpdateG",
          "i": "${i}",
          "v": "${v}",
          "t": "${t}",
          "p": "${p}",
          "q": "${q}"
        },
        {
          "type": "UpdateB",
          "i": "${i}",
          "v": "${v}",
          "t": "${t}",
          "p": "${p}",
          "q": "${q}"
        }
      ]
    },
    "UpdateH": {
      "parameters": [
        "event"
      ],
      "commands": [
        {
          "type": "SetValue",
          "componentId": "outter",
          "property": "h",
          "value": "${Math.round(Math.clamp(0, (event.component.x - (30/2)) / (event.component.width - 30), 1) * 360)}"
        }
      ]
    },
    "UpdateSV": {
      "parameters": [
        "event"
      ],
      "commands": [
        {
          "type": "SetValue",
          "componentId": "outter",
          "property": "s",
          "value": "${Math.round(100 * event.component.x / @paletteWidth)}"
        },
        {
          "type": "SetValue",
          "componentId": "outter",
          "property": "v",
          "value": "${100 - Math.round(100 * event.component.y / @paletteHeight)}"
        },
        {
          "type": "SetValue",
          "componentId": "outter",
          "property": "x",
          "value": "${event.component.x}"
        },
        {
          "type": "SetValue",
          "componentId": "outter",
          "property": "y",
          "value": "${event.component.y}"
        }
      ]
    }
  },
  "layouts": {},
  "mainTemplate": {
    "parameters": [
      "payload"
    ],
    "items": [
      {
        "type": "Container",
        "width": "100vw",
        "height": "100vh",
        "alignItems": "center",
        "justifyContent": "center",
        "id": "outter",
        "bind": [
          {
            "name": "x",
            "value": "0"
          },
          {
            "name": "y",
            "value": "0"
          },
          {
            "name": "h",
            "value": "0"
          },
          {
            "name": "s",
            "value": "0"
          },
          {
            "name": "v",
            "value": "0"
          },
          {
            "name": "r",
            "value": "0"
          },
          {
            "name": "g",
            "value": "0"
          },
          {
            "name": "b",
            "value": "0"
          }
        ],
        "items": [
          {
            "type": "VectorGraphic",
            "source": "ColorPicker",
            "id": "foo",
            "width": "${@paletteWidth}",
            "height": "${@paletteHeight * .9}",
            "scale": "best-fit",
            "s": "${s}",
            "v": "${v}",
            "x": "${x}",
            "y": "${y}",
            "r": "${r}",
            "g": "${g}",
            "b": "${b}",
            "onMount": [
              {
                "type": "HSV2RGB",
                "h": 0,
                "s": 0,
                "v": 1
              }
            ],
            "onDown": [
              {
                "type": "Noop"
              }
            ],
            "onUp": [
              {
                "type": "Noop"
              },
              {
                "type": "SendEvent",
                "arguments": [
                  "${r}",
                  "${g}",
                  "${b}"
                ]
              }
            ],
            "onMove": [
              {
                "type": "UpdateSV",
                "event": "${event}"
              },
              {
                "type": "HSV2RGB",
                "h": "${Math.abs(h)}",
                "s": "${Math.abs(s) / 100}",
                "v": "${Math.abs(v) / 100}"
              }
            ]
          },
          {
            "type": "VectorGraphic",
            "source": "ColorSlider",
            "id": "foo",
            "width": "${@paletteWidth}",
            "height": "${@paletteHeight * .1}",
            "scale": "best-fit",
            "s": "${s}",
            "v": "${v}",
            "x": "${x}",
            "y": "${y}",
            "r": "${r}",
            "g": "${g}",
            "b": "${b}",
            "onDown": [
              {
                "type": "Noop"
              }
            ],
            "onUp": [
              {
                "type": "Noop"
              }
            ],
            "onMove": [
              {
                "type": "UpdateH",
                "event": "${event}"
              },
              {
                "type": "HSV2RGB",
                "h": "${Math.abs(h) / 100}",
                "s": "${Math.abs(s) / 100}",
                "v": "${Math.abs(v) / 100}"
              }
            ]
          },
          {
            "type": "Text",
            "id": "debug",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "text": "rgb(${r}, ${g}, ${b})"
          }
        ]
      }
    ]
  }
}